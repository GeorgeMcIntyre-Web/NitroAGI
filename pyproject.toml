[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nitroagi"
version = "0.1.0"
description = "A multi-modal artificial intelligence system inspired by the human brain's modular architecture"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "George McIntyre", email = "george@nitroagi.dev"},
]
maintainers = [
    {name = "George McIntyre", email = "george@nitroagi.dev"},
]
keywords = [
    "artificial-intelligence",
    "machine-learning", 
    "multi-modal",
    "llm",
    "computer-vision",
    "reasoning",
    "orchestration",
    "agi"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.4.0",
    "python-dotenv>=1.0.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "numpy>=1.24.0",
    "torch>=2.1.0",
    "transformers>=4.35.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

vision = [
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "scikit-image>=0.22.0",
]

nlp = [
    "spacy>=3.7.0",
    "nltk>=3.8.0",
    "textblob>=0.17.0",
]

ml = [
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.1.0",
]

all = [
    "nitroagi[dev,vision,nlp,ml]",
]

[project.urls]
Homepage = "https://github.com/GeorgeMcIntyre-Web/NitroAGI"
Documentation = "https://docs.nitroagi.dev"
Repository = "https://github.com/GeorgeMcIntyre-Web/NitroAGI.git"
Issues = "https://github.com/GeorgeMcIntyre-Web/NitroAGI/issues"
Changelog = "https://github.com/GeorgeMcIntyre-Web/NitroAGI/blob/main/CHANGELOG.md"

[project.scripts]
nitroagi = "nitroagi.cli:main"
nitroagi-server = "nitroagi.api.main:run"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["nitroagi*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
nitroagi = ["py.typed", "*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip_glob = ["*/migrations/*", "*/settings/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true
strict = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "numpy.*",
    "pandas.*",
    "sklearn.*",
    "cv2.*",
    "PIL.*",
    "redis.*",
    "kafka.*",
    "celery.*",
]
ignore_missing_imports = true

[tool.pylint]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0622",  # redefined-builtin
    "W0105",  # pointless-string-statement
]

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.coverage.run]
source = ["src/nitroagi"]
branch = true
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-ra -q --strict-markers --strict-config --cov=src/nitroagi"

[tool.bandit]
exclude_dirs = ["tests", "docs", "scripts"]
skips = ["B101", "B601"]